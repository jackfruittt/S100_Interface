{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jackr\\\\OneDrive\\\\Documents\\\\CAS Work\\\\S100_Reboot\\\\s100_webui\\\\s100_webui\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ESP32_IP = 'http://192.168.1.34';\nconst WS_ENDPOINT = `ws://${ESP32_IP}/ws`;\nfunction App() {\n  _s();\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  const [isHolding, setIsHolding] = useState(false);\n  const [ws, setWs] = useState(null);\n\n  // Set up WebSocket connection to ESP32\n  useEffect(() => {\n    const socket = new WebSocket(WS_ENDPOINT);\n    setWs(socket);\n    socket.onopen = () => {\n      console.log(\"Connected to WebSocket\");\n      setStatusMessage(\"Connected to ESP32 WebSocket\");\n    };\n    socket.onmessage = event => {\n      console.log(\"Received from ESP32:\", event.data);\n      setStatusMessage(event.data);\n    };\n    socket.onerror = error => {\n      console.error(\"WebSocket Error:\", error);\n      setStatusMessage(\"WebSocket connection error\");\n    };\n    socket.onclose = () => {\n      console.log(\"WebSocket closed\");\n      setStatusMessage(\"WebSocket connection closed\");\n    };\n\n    // Cleanup on component unmount\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  // Function to send WebSocket messages to ESP32\n  const sendWebSocketMessage = message => {\n    if (ws && ws.readyState === WebSocket.OPEN) {\n      ws.send(message);\n    }\n  };\n\n  // Handle the \"Hold On\" button\n  const handleHoldOnMouseDown = () => {\n    setIsHolding(true);\n    sendWebSocketMessage(\"on\");\n  };\n\n  // Handle mouse up event globally\n  const handleMouseUp = () => {\n    if (isHolding) {\n      sendWebSocketMessage(\"off\");\n      setIsHolding(false);\n    }\n  };\n\n  // Add a global mouseup event listener\n  useEffect(() => {\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isHolding]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ESP32 WebSocket Control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onMouseDown: handleHoldOnMouseDown,\n        onMouseUp: handleMouseUp,\n        children: \"Hold to Turn LED On (WebSocket)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Live Camera Stream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `${ESP32_IP}/stream`,\n      alt: \"ESP32 Stream\",\n      style: {\n        marginTop: '20px',\n        border: '2px solid #333',\n        width: '640px',\n        height: '480px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hoLUo3Phn5eYm54cCuGt2UtV+eg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ESP32_IP","WS_ENDPOINT","App","_s","statusMessage","setStatusMessage","isHolding","setIsHolding","ws","setWs","socket","WebSocket","onopen","console","log","onmessage","event","data","onerror","error","onclose","close","sendWebSocketMessage","message","readyState","OPEN","send","handleHoldOnMouseDown","handleMouseUp","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onMouseDown","onMouseUp","src","alt","marginTop","border","width","height","_c","$RefreshReg$"],"sources":["C:/Users/jackr/OneDrive/Documents/CAS Work/S100_Reboot/s100_webui/s100_webui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nconst ESP32_IP = 'http://192.168.1.34';\r\nconst WS_ENDPOINT = `ws://${ESP32_IP}/ws`;\r\n\r\nfunction App() {\r\n  const [statusMessage, setStatusMessage] = useState(\"\");\r\n  const [isHolding, setIsHolding] = useState(false);\r\n  const [ws, setWs] = useState(null);\r\n\r\n  // Set up WebSocket connection to ESP32\r\n  useEffect(() => {\r\n    const socket = new WebSocket(WS_ENDPOINT);\r\n    setWs(socket);\r\n\r\n    socket.onopen = () => {\r\n      console.log(\"Connected to WebSocket\");\r\n      setStatusMessage(\"Connected to ESP32 WebSocket\");\r\n    };\r\n\r\n    socket.onmessage = (event) => {\r\n      console.log(\"Received from ESP32:\", event.data);\r\n      setStatusMessage(event.data);\r\n    };\r\n\r\n    socket.onerror = (error) => {\r\n      console.error(\"WebSocket Error:\", error);\r\n      setStatusMessage(\"WebSocket connection error\");\r\n    };\r\n\r\n    socket.onclose = () => {\r\n      console.log(\"WebSocket closed\");\r\n      setStatusMessage(\"WebSocket connection closed\");\r\n    };\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      socket.close();\r\n    };\r\n  }, []);\r\n\r\n  // Function to send WebSocket messages to ESP32\r\n  const sendWebSocketMessage = (message) => {\r\n    if (ws && ws.readyState === WebSocket.OPEN) {\r\n      ws.send(message);\r\n    }\r\n  };\r\n\r\n  // Handle the \"Hold On\" button\r\n  const handleHoldOnMouseDown = () => {\r\n    setIsHolding(true);\r\n    sendWebSocketMessage(\"on\");\r\n  };\r\n\r\n  // Handle mouse up event globally\r\n  const handleMouseUp = () => {\r\n    if (isHolding) {\r\n      sendWebSocketMessage(\"off\");\r\n      setIsHolding(false);\r\n    }\r\n  };\r\n\r\n  // Add a global mouseup event listener\r\n  useEffect(() => {\r\n    document.addEventListener('mouseup', handleMouseUp);\r\n    return () => {\r\n      document.removeEventListener('mouseup', handleMouseUp);\r\n    };\r\n  }, [isHolding]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>ESP32 WebSocket Control</h1>\r\n\r\n      {/* Button for controlling LED via WebSocket */}\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <button\r\n          onMouseDown={handleHoldOnMouseDown}\r\n          onMouseUp={handleMouseUp}\r\n        >\r\n          Hold to Turn LED On (WebSocket)\r\n        </button>\r\n      </div>\r\n\r\n      {statusMessage && <p>{statusMessage}</p>}\r\n\r\n      {/* Live Video Stream */}\r\n      <h2>Live Camera Stream</h2>\r\n      <img\r\n        src={`${ESP32_IP}/stream`}\r\n        alt=\"ESP32 Stream\"\r\n        style={{ marginTop: '20px', border: '2px solid #333', width: '640px', height: '480px' }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}